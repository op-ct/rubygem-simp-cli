#!/usr/bin/env ruby

# Set this env var to run without adding the AIO Puppet agent ruby paths
unless ENV['USE_AIO_PUPPET'] == 'no'
  # Check for AIO Puppet installation, and use it if present
  if File.directory?('/opt/puppetlabs/puppet/lib/ruby')
    $LOAD_PATH.unshift *Dir.glob('/opt/puppetlabs/puppet/lib/ruby/*')
  end

  if File.directory?('/opt/puppetlabs/puppet/bin')
    ENV['PATH'] = '/opt/puppetlabs/puppet/bin:' + ENV['PATH']
  end
end

# This seems to have popped up at some point with Puppet 5, not sure why this
# is needed and apparently 'pry' works around it somehow. Printing Gem.path
# shows the same in either case
Gem.clear_paths

$LOAD_PATH.unshift(File.expand_path(File.join(File.dirname(__FILE__), '../lib')))
Gem.path.unshift(File.expand_path(File.join(File.dirname(__FILE__), '../../..')))

# Simp::Cli uses facts from SIMP's stdlib and simplib modules, so make
# sure these are available by pointing to their install directories. We
# don't have to worry if copies of these installed libraries are also
# in the Fact path, as having extra or missing libraries in that path
# doesn't hurt anything.
fact_paths = [
  '/usr/share/simp/modules/stdlib/lib/facter',
  '/usr/share/simp/modules/simplib/lib/facter'
]
fact_paths << ENV['FACTER_PATH'] unless ENV['FACTER_PATH'].nil? || ENV['FACTER_PATH'].empty?

require 'simp/cli'
require 'facter'

# This is needed for calls to the Facter module directly
fact_paths.each do |fpath|
  Facter.search(fpath)
end

Facter.loadfacts

# This is needed for later calls to facter via Puppet
ENV['FACTER_PATH'] = fact_paths.join(':')

exit Simp::Cli.start
